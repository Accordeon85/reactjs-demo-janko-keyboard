{"version":3,"sources":["octave_notes.js","Components/roundKey.jsx","Components/rectangleKey.jsx","Components/hexagonKey.jsx","key_configs.js","Components/jankoContainer.jsx","localizations.js","cpKeyboard_config.js","App.js","serviceWorker.js","index.js"],"names":["notes","RoundKey","props","mainPaddingH","mainPaddingV","spacingH","spacingV","posX","posY","isBlack","ray","className","onClick","cx","cy","r","fill","stroke","RectangleKey","width","x","y","height","HexagonKey","centerX","centerY","pX","p1","p2","p3","p4","p5","p6","points","keyShapes","keyConfigs","roundKeyConfig","strokeS","keyShape","rectKeyConfig","hexaKeyConfig","JankoContainer","doubles","onKeyClick","octaves","Array","from","length","nbOctaves","v","i","jankoNotes","concat","map","o","arr","octave","fullArr","elm","j","note","parseInt","includes","JankoStructure","useState","window","innerWidth","keyboardSize","updatekeyboardSize","useEffect","addEventListener","viewBox","n","localizations","languages","azertyConfig","key","step","qwertyConfig","CPKeyboardTypes","value","label","synth","Tone","toDestination","formatedNote","replace","triggerAttackRelease","configList","Object","values","App","language","currentKeyFullConfig","updateKeyFullConfig","nbDoubles","updateNbDoubles","updateNbOctaves","selectedLanguage","updateLanguage","keyLabelConfigList","c","currentKeyLabelConfig","updateKeyLabelConfig","currentCPKeyboardOctave","updateCPKeyboardOctave","selectCPKeyboardType","updateSelectedCPKeyboardType","currentCPKeyboardType","updateCPKeyboardType","onKeyDown","event","forEach","keyNote","keyCode","cssNote","cssElements","document","getElementsByClassName","style","onKeyUp","tabIndex","options","controlClassName","onChange","placeholder","nConfig","find","k","min","max","strict","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c92d9a25.chunk.js","sourcesContent":["const notes = [\n  'C', 'Cs', 'D', 'Ds', 'E', 'F', 'Fs', 'G', 'Gs', 'A', 'As', 'B'\n]\n\nexport default notes","import React from 'react';\n\nconst RoundKey = (props) => {\n  const { \n    mainPaddingH, \n    mainPaddingV, \n    spacingH,\n    spacingV,\n    posX,\n    posY,\n    isBlack,\n    ray,\n    className,\n    onClick\n  } = props\n  return <circle cx={mainPaddingH+spacingH*posX} cy={mainPaddingV+spacingV*posY}\n   r={ray} fill={isBlack ? 'black' : 'white'} stroke='black' className={className} onClick={onClick} />\n}\n\nexport default RoundKey","import React from 'react';\n\nconst RectangleKey = (props) => {\n  const { \n    mainPaddingH, \n    mainPaddingV, \n    spacingH,\n    spacingV, \n    posX, \n    posY,\n    isBlack,\n    width,\n    className,\n    onClick\n  } = props\n  return <rect x={mainPaddingH+spacingH*posX} y={mainPaddingV+spacingV*posY}\n   width={width} height={width*1.3} fill={isBlack ? 'black' : 'white'} stroke='black' className={className}\n   onClick={onClick} />\n}\n\nexport default RectangleKey","import React from 'react';\n\nconst HexagonKey = (props) => {\n  const { \n    mainPaddingH, \n    mainPaddingV, \n    spacingH,\n    spacingV, \n    posX, \n    posY,\n    isBlack,\n    width,\n    className,\n    onClick\n  } = props\n\n  const centerX = mainPaddingH+spacingH*posX\n  const centerY = mainPaddingV+spacingV*posY\n  const pX = centerX+width*0.87\n  const p1 = { x:centerX-width*0.87, y:centerY-width/2 }\n  const p2 = { x:centerX, y:centerY-width }\n  const p3 = { x:pX, y:centerY-width/2 }\n  const p4 = { x:pX, y:centerY+width/2 }\n  const p5 = { x:centerX, y:centerY+width }\n  const p6 = { x:p1.x, y:centerY+width/2 }\n\n  return <>\n    <polygon points={`${p1.x},${p1.y} ${p2.x},${p2.y} ${p3.x},${p3.y} \n      ${p4.x},${p4.y} ${p5.x},${p5.y} ${p6.x},${p6.y}` }\n      fill={isBlack ? 'black' : 'white'} stroke='black' className={className}\n      onClick={onClick} />\n    </>\n}\n\nexport default HexagonKey","\nexport const keyShapes = {\n  round : 'round',\n  rectangle : 'rectangle',\n  hexagon : 'hexagon'\n}\n\nexport const keyConfigs = {\n  roundKeyConfig : {\n    width: 16,\n    strokeS: 1,\n    spacingH: 17,\n    spacingV: 14,\n    mainPaddingH: 15,\n    mainPaddingV: 52,\n    keyShape: keyShapes.round\n  },\n  rectKeyConfig : {\n    width: 12,\n    strokeS: 1,\n    spacingH: 14,\n    spacingV: 16,\n    mainPaddingH: 15,\n    mainPaddingV: 48,\n    keyShape: keyShapes.rectangle\n  },\n  hexaKeyConfig : {\n    width: 10,\n    strokeS: 1,\n    spacingH: 18,\n    spacingV: 16,\n    mainPaddingH: 16,\n    mainPaddingV: 62,\n    keyShape: keyShapes.hexagon\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport RoundKey from './roundKey'\nimport RectangleKey from './rectangleKey'\nimport HexagonKey from './hexagonKey'\nimport { keyShapes } from '../key_configs'\n\nconst JankoStructure = (arr, octave, doubles) => {\n  let fullArr = []\n  for(let i = 0; i <= doubles;i++) {\n    fullArr = [].concat(fullArr, arr.map((elm, j) => { \n      return { \n      note: elm + parseInt(octave+1),\n      posX: (j/2) + octave*6,\n      posY: j%2 !==0 ? -(2*i+1) : -i*2,\n      isBlack: elm.includes('s')\n      }\n    }))\n  }\n  return fullArr\n}\n\nconst JankoContainer = (props) => {\n  const { mainPaddingH, mainPaddingV, spacingH, spacingV, width, keyShape, doubles, onKeyClick } = props\n  const octaves = Array.from({length: props.nbOctaves}, (v, i) => i)\n  const jankoNotes = [].concat(...octaves.map(o => JankoStructure(props.notes,o, doubles)))\n  let [keyboardSize, updatekeyboardSize] = useState(window.innerWidth/3.5)\n\n  const getKeyBoard = () => {\n    if (keyShape === keyShapes.round) {\n      return <>\n        {\n          jankoNotes.map((n,i) =>\n            <RoundKey mainPaddingH={mainPaddingH} mainPaddingV={mainPaddingV+(doubles*14)}\n              spacingH={spacingH}\n              posX={n.posX}\n              spacingV={spacingV}\n              posY={n.posY}\n              ray={width/2}\n              isBlack={n.isBlack}\n              key={i}\n              className={`key-${n.note}`}\n              onClick={() => onKeyClick(n.note)} />\n          )\n        }\n      </>\n    }\n    if (keyShape === keyShapes.hexagon) {\n      return <>\n        {\n          jankoNotes.map((n,i) =>\n            <HexagonKey mainPaddingH={mainPaddingH} mainPaddingV={mainPaddingV+(doubles*15)}\n              spacingH={spacingH}\n              posX={n.posX}\n              spacingV={spacingV}\n              posY={n.posY}\n              width={width}\n              isBlack={n.isBlack}\n              key={i}\n              className={`key-${n.note}`}\n              onClick={() => onKeyClick(n.note)}  />\n          )\n        }\n      </>\n    }\n    return <>\n    {\n      jankoNotes.map((n,i) =>\n        <RectangleKey mainPaddingH={mainPaddingH} mainPaddingV={mainPaddingV+(doubles*18)}\n          spacingH={spacingH}\n          posX={n.posX}\n          spacingV={spacingV}\n          posY={n.posY}\n          width={width}\n          isBlack={n.isBlack}\n          key={i}\n          className={`key-${n.note}`}\n          onClick={() => onKeyClick(n.note)}  />\n      )\n    }\n    </>\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      updatekeyboardSize(window.innerWidth/3.5)\n    });\n  }, []);\n\n  return (\n    <div className='svg-container'>\n      <svg width=\"100%\" height={keyboardSize} viewBox=\"100 0 150 150\" >\n      {\n        getKeyBoard()\n      }\n      </svg>\n    </div>\n  )\n}\n\nexport default JankoContainer","export const localizations = {\n  'jankoKeyboard' : {\n    'fr' : 'Clavier Janko',\n    'en' : 'Janko keyboard'\n  },\n  'selectKeysShape' : {\n    'fr' : 'Sélectionner la forme des touches',\n    'en' : 'Select keys\\' shape'\n  },\n  'selectNbOctaves' : { \n    'fr' : 'Nombre d\\'octaves',\n    'en' : 'Select the number of octaves'\n  },\n  'selectNbDoubles' : {\n    'fr' : 'Ajouter des rangées en double',\n    'en' : 'Add double rows'\n  },\n  'cpKeyboardOptionsTitle' : {\n    'fr' : 'Jouer au clavier de votre ordinateur :',\n    'en' : 'Play with the keyboard of your computer :'\n  },\n  'selectCPKeyboardOctave' : {\n    'fr' : 'Sélectionner l\\'octave',\n    'en' : 'Select the octave'\n  },\n  'selectCPKeyboardType' : {\n    'fr' : 'Sélectionner le type de clavier',\n    'en' : 'Select keyboard\\'s type'\n  },\n  'round' : {\n    'fr' : 'Rond',\n    'en' : 'Circle'\n  },\n  'rectangle' : {\n    'fr' : 'Rectangle',\n    'en' : 'Rectangle'\n  },\n  'hexagon' : {\n    'fr' : 'Hexagone',\n    'en' : 'Hexagon'\n  }\n}\n\nexport const languages = [ \n  { 'value' : 'fr', 'label' : 'français' }, \n  { 'value' : 'en', 'label' : 'english' }, \n]","export const azertyConfig = [\n  { key : 65 , note : 'A#', step : -1 },\n  { key : 90 , note : 'C', step : 0 },\n  { key : 69 , note : 'D', step : 0 },\n  { key : 82 , note : 'E', step : 0 },\n  { key : 84 , note : 'F#', step : 0 },\n  { key : 89 , note : 'G#', step : 0 },\n  { key : 85 , note : 'A#', step : 0 },\n  { key : 73 , note : 'C', step : 1 },\n  { key : 79 , note : 'D', step : 1 },\n  { key : 80 , note : 'E', step : 1 },\n  { key : 0 , note : 'F#', step : 1 },\n  { key : 81 , note : 'B', step : -1 },\n  { key : 83 , note : 'C#', step : 0 },\n  { key : 68 , note : 'D#', step : 0 },\n  { key : 70 , note : 'F', step : 0 },\n  { key : 71 , note : 'G', step : 0 },\n  { key : 72 , note : 'A', step : 0 },\n  { key : 74 , note : 'B', step : 0 },\n  { key : 75 , note : 'C#', step : 1 },\n  { key : 76 , note : 'D#', step : 1 },\n  { key : 77 , note : 'F', step : 1 },\n  { key : 165 , note : 'G', step : 1 },\n  { key : 87 , note : 'C', step : 0 },\n  { key : 88 , note : 'D', step : 0 },\n  { key : 67 , note : 'E', step : 0 },\n  { key : 86 , note : 'F#', step : 0 },\n  { key : 66 , note : 'G#', step : 0 },\n  { key : 78 , note : 'A#', step : 0 },\n  { key : 188 , note : 'C', step : 1 },\n  { key : 59 , note : 'D', step : 1 },\n  { key : 58 , note : 'E', step : 1 },\n  { key : 161 , note : 'F#', step : 1 },\n]\n\nexport const qwertyConfig = [\n  { key : 80 , note : 'A#', step : -1 },\n  { key : 87 , note : 'C', step : 0 },\n  { key : 69 , note : 'D', step : 0 },\n  { key : 82 , note : 'E', step : 0 },\n  { key : 84 , note : 'F#', step : 0 },\n  { key : 89 , note : 'G#', step : 0 },\n  { key : 85 , note : 'A#', step : 0 },\n  { key : 73 , note : 'C', step : 1 },\n  { key : 79 , note : 'D', step : 1 },\n  { key : 80 , note : 'E', step : 1 },\n  { key : 219 , note : 'F#', step : 1 },\n  { key : 65 , note : 'B', step : -1 },\n  { key : 83 , note : 'C#', step : 0 },\n  { key : 68 , note : 'D#', step : 0 },\n  { key : 70 , note : 'F', step : 0 },\n  { key : 71 , note : 'G', step : 0 },\n  { key : 72 , note : 'A', step : 0 },\n  { key : 74 , note : 'B', step : 0 },\n  { key : 75 , note : 'C#', step : 1 },\n  { key : 76 , note : 'D#', step : 1 },\n  { key : 59 , note : 'F', step : 1 },\n  { key : 222 , note : 'G', step : 1 },\n  { key : 90 , note : 'C', step : 0 },\n  { key : 88 , note : 'D', step : 0 },\n  { key : 67 , note : 'E', step : 0 },\n  { key : 86 , note : 'F#', step : 0 },\n  { key : 66 , note : 'G#', step : 0 },\n  { key : 78 , note : 'A#', step : 0 },\n  { key : 77 , note : 'C', step : 1 },\n  { key : 188 , note : 'D', step : 1 },\n  { key : 190 , note : 'E', step : 1 },\n  { key : 191 , note : 'F#', step : 1 },\n]","import React, { useState } from 'react';\nimport './App.css';\nimport notes from './octave_notes'\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css'\nimport NumericInput from 'react-numeric-input'\nimport * as Tone from 'tone'\nimport JankoContainer from './Components/jankoContainer'\nimport { keyConfigs } from './key_configs'\nimport { localizations, languages } from './localizations'\nimport { azertyConfig, qwertyConfig } from './cpKeyboard_config'\n\nconst CPKeyboardTypes = [\n  { value : 'azerty', label : 'azerty' },\n  { value : 'qwerty', label : 'qwerty' },\n]\nconst synth = new Tone.Synth().toDestination();\n\nconst onKeyClick = (note) => {\n  const formatedNote = note.replace('key-','').replace('s','#')\n  synth.triggerAttackRelease(formatedNote, \"8n\");\n}\nconst configList = Object.values(keyConfigs);\n\nconst getKeyConfig = keyShape => {\n  return configList.find(k => k.keyShape === keyShape)\n}\n\n// value/label list for dropdown\nconst getKeyLabelList = language => {\n  return configList.map(c => { return { value:c.keyShape, label: localizations[c.keyShape][language] }})\n}\n\nconst defaultKeyConfigIndex = 2\n\nfunction App() {\n  let [currentKeyFullConfig, updateKeyFullConfig] = useState(configList[defaultKeyConfigIndex])\n  let [nbDoubles, updateNbDoubles] = useState(0)\n  let [nbOctaves, updateNbOctaves] = useState(1)\n  let [selectedLanguage, updateLanguage] = useState(languages[1])\n  let keyLabelConfigList = getKeyLabelList(selectedLanguage.value)\n  let [currentKeyLabelConfig, updateKeyLabelConfig] = useState(keyLabelConfigList[defaultKeyConfigIndex])\n  let [currentCPKeyboardOctave, updateCPKeyboardOctave] = useState(1)\n\n  let [selectCPKeyboardType, updateSelectedCPKeyboardType] = useState(CPKeyboardTypes[0])\n  let [currentCPKeyboardType, updateCPKeyboardType] = useState(azertyConfig)\n\n  const handleCPKeyboardType = event => {\n    updateSelectedCPKeyboardType(event)\n    if(event.value === 'qwerty') {\n      updateCPKeyboardType([...qwertyConfig])\n    }\n    else {\n      updateCPKeyboardType([...azertyConfig])\n    }\n  }\n\n  const handleConfig = event => {\n    updateKeyLabelConfig(event)\n    const nConfig = getKeyConfig(event.value)\n    updateKeyFullConfig(nConfig)\n  }\n\n  const handleKeyDown = event => {\n    currentCPKeyboardType.forEach(keyNote => {\n      if (event.keyCode === keyNote.key) {\n        const octave = keyNote.step + currentCPKeyboardOctave\n        if (octave > 0 && octave < 5) {\n          synth.triggerAttackRelease(keyNote.note+octave, \"8n\");\n          const cssNote = `key-${keyNote.note.replace('#','s')+octave}`\n          const cssElements = document.getElementsByClassName(cssNote)\n          for (const elm of cssElements) {\n            elm.style.fill = 'purple'\n          }\n        }\n      }\n    })\n  }\n\n  const handleKeyUp = event => {\n    azertyConfig.forEach(keyNote => {\n      if (event.keyCode === keyNote.key) {\n        const octave = keyNote.step + currentCPKeyboardOctave\n        if (octave > 0 && octave < 5) {\n          const cssNote = `key-${keyNote.note.replace('#','s')+octave}`\n          const cssElements = document.getElementsByClassName(cssNote)\n          for (const elm of cssElements) {\n            elm.style.fill = null\n          }\n        }\n      }\n    })\n  }\n\n  return (\n    <div className=\"App\" onKeyDown={handleKeyDown} onKeyUp={handleKeyUp} tabIndex={0}>\n      <div className='leftMenu'>\n        <div>\n          <h1 className='leftMainTitle'>{localizations['jankoKeyboard'][selectedLanguage.value]}</h1>\n          <div>\n          <div>\n            <div className='labelTitle'>Language</div>\n              <Dropdown options={languages} value={selectedLanguage}\n                controlClassName='dropdown'\n                className='dropdownroot'\n                onChange={updateLanguage} placeholder=\"Select an option\" />\n            </div>\n            <div className='labelTitle'>{localizations['selectKeysShape'][selectedLanguage.value]}</div>\n            <Dropdown options={keyLabelConfigList} value={currentKeyLabelConfig}\n              controlClassName='dropdown'\n              className='dropdownroot'\n              onChange={handleConfig} placeholder=\"Select an option\" />\n          </div>\n          <div className='labelTitle'>{localizations['selectNbOctaves'][selectedLanguage.value]}</div>\n            <NumericInput min={1} max={3} value={nbOctaves} onChange={updateNbOctaves} className=\"numericInput\" strict />\n          </div>\n          <div>\n            <div className='labelTitle'>{localizations['selectNbDoubles'][selectedLanguage.value]}</div>\n            <NumericInput min={0} max={2} value={nbDoubles} onChange={updateNbDoubles} className=\"numericInput\" strict />\n          </div>\n          <div>\n          <h3 className='labelTitle'>{localizations['cpKeyboardOptionsTitle'][selectedLanguage.value]}</h3>\n          <div className='labelTitle'>{localizations['selectCPKeyboardOctave'][selectedLanguage.value]}</div>\n          <NumericInput min={1} max={4} value={currentCPKeyboardOctave} onChange={updateCPKeyboardOctave} className=\"numericInput\" strict />\n          <div>\n            <div className='labelTitle'>{localizations['selectCPKeyboardType'][selectedLanguage.value]}</div>\n            <Dropdown options={CPKeyboardTypes} value={selectCPKeyboardType}\n              controlClassName='dropdown'\n              className='dropdownroot'\n              onChange={handleCPKeyboardType} placeholder=\"Select an option\" />\n          </div>\n        </div>\n      </div>\n      <JankoContainer { ...currentKeyFullConfig }\n        notes = {notes}\n        doubles={nbDoubles}\n        nbOctaves={nbOctaves}\n        onKeyClick={onKeyClick}\n        />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}